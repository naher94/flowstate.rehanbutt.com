//******* Variables

//Numbers
$tile-radius: 10px;
$tile-radius-medium: 20px;
$tile-radius-big: 30px;
$pill-radius: 500px;

$elevation: 0.3em;

// Colors
$pure-white: #ffffff;
$pure-black: #000000;

////Brand Colors
$twitter-blue: #1DA1F2;
$twitter-blue-light: #D2ECFC;
$twitter-blue-dark: #0E8FD5;

$agenda-brand-color: #FFAA01;
$apple-news-brand-color: #f84969;

$brand-pink: #D12E6A;
$brand-pink-light: #FAEAF0;
$light-grey: #F3F3F3;

//Semantic colors maps the color palette above to their use across the application
//// This method allows for several flavors of a color to be added such as a dark mode or a high contrast for example
$semantic-colors:(
  light:(
    text: $pure-black,
    text-accent: $brand-pink,
    footer-bg: $light-grey,
  ),
  dark:(
    text: $pure-white,
    text-accent: $brand-pink, //TODO made this a different color
    footer-bg: $light-grey, //TODO made this a different color
  ),
);

//Helper function to build CSS colors
@function compose-color($color-key) {
  @return '--color-#{$color-key}';
}

//Function to be called inline for color mapping
@function semantic-color($color-key) {
  @return (var(--color-#{$color-key}));
}

:root{
  @each $key, $value in map-get($semantic-colors, 'light') {
    #{compose-color($key)}: #{$value};
  }
  @media (prefers-color-scheme: dark) {
    @each $key, $value in map-get($semantic-colors, 'dark') {
      #{compose-color($key)}: #{$value};
    }
  }
}

//Typography

@import url('https://fonts.googleapis.com/css?family=Lato:100,100i,300,300i,400,400i,700,700i,900i,900&display=swap');
$lato: 'Lato', sans-serif;
$lato-thin: 100;
$lato-light: 300;
$lato-light-italic: 300i;
$lato-regular: 400;
$lato-bold: 700;
$lato-bold-italic: 700i;
$lato-black: 900;